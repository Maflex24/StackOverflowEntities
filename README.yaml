openapi: 3.0.1
info:
  title: StackOverflowEntities
  version: '1.0'
paths:
  /comment:
    post:
      tags:
        - Comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentPostModel'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
    put:
      tags:
        - Comments
      parameters:
        - name: commentId
          in: query
          required: true
          schema:
            type: string
        - name: content
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Comments
      parameters:
        - name: commentId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /questions:
    get:
      tags:
        - Questions
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: resultsPerPage
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: searchPhrase
          in: query
          schema:
            type: string
        - name: orderBy
          in: query
          schema:
            type: string
        - name: orderByDesc
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllQuestionsPageDto'
  /question:
    get:
      tags:
        - Questions
      parameters:
        - name: questionId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleQuestionDto'
    post:
      tags:
        - Questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionPostModel'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
    put:
      tags:
        - Questions
      parameters:
        - name: QuestionId
          in: query
          required: true
          schema:
            type: string
        - name: title
          in: query
          schema:
            type: string
        - name: content
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
    delete:
      tags:
        - Questions
      parameters:
        - name: questionId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
  /reply:
    post:
      tags:
        - Replies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyPostModel'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
    put:
      tags:
        - Replies
      parameters:
        - name: replyId
          in: query
          required: true
          schema:
            type: string
        - name: content
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Replies
      parameters:
        - name: replyId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /tags:
    get:
      tags:
        - Tags
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Int32StringInt32<>f__AnonymousType0'
  /tag:
    get:
      tags:
        - Tags
      parameters:
        - name: tagId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: resultsPerPage
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllQuestionsPageDto'
    post:
      tags:
        - Tags
      parameters:
        - name: tagName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
    put:
      tags:
        - Tags
      parameters:
        - name: tagId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: newName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Tags
      parameters:
        - name: tagId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /users:
    get:
      tags:
        - Users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersDto'
components:
  schemas:
    AllQuestionsPageDto:
      type: object
      properties:
        totalQuestions:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        resultsFrom:
          type: integer
          format: int32
        resultsTo:
          type: integer
          format: int32
        questionsDto:
          type: array
          items:
            $ref: '#/components/schemas/QuestionInfoDto'
          nullable: true
      additionalProperties: false
    AuthorDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
    Comment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
          nullable: true
        authorId:
          type: string
          format: uuid
        author:
          $ref: '#/components/schemas/User'
        rating:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        lastEdited:
          type: string
          format: date-time
          nullable: true
        replyId:
          type: string
          format: uuid
          nullable: true
        reply:
          $ref: '#/components/schemas/Reply'
        questionId:
          type: string
          format: uuid
        question:
          $ref: '#/components/schemas/Question'
      additionalProperties: false
    CommentDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        author:
          $ref: '#/components/schemas/AuthorDto'
        rating:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        lastUpdate:
          type: string
          format: date-time
          nullable: true
        content:
          type: string
          nullable: true
        replyId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    CommentPostModel:
      type: object
      properties:
        questionId:
          type: string
          format: uuid
          nullable: true
        replyId:
          type: string
          format: uuid
          nullable: true
        authorId:
          type: string
          format: uuid
        content:
          type: string
          nullable: true
      additionalProperties: false
    Int32StringInt32<>f__AnonymousType0:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        questions:
          type: integer
          format: int32
      additionalProperties: false
    Question:
      type: object
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
          nullable: true
        authorId:
          type: string
          format: uuid
        author:
          $ref: '#/components/schemas/User'
        rating:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        lastEdited:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          nullable: true
        replies:
          type: array
          items:
            $ref: '#/components/schemas/Reply'
          nullable: true
      additionalProperties: false
    QuestionInfoDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
        contentShort:
          type: string
          nullable: true
        replies:
          type: integer
          format: int32
        comments:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
      additionalProperties: false
    QuestionPostModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        authorId:
          type: string
          format: uuid
      additionalProperties: false
    QuestionReplyDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        author:
          $ref: '#/components/schemas/AuthorDto'
        rating:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        lastUpdate:
          type: string
          format: date-time
          nullable: true
        content:
          type: string
          nullable: true
      additionalProperties: false
    Reply:
      type: object
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
          nullable: true
        authorId:
          type: string
          format: uuid
        author:
          $ref: '#/components/schemas/User'
        rating:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        lastEdited:
          type: string
          format: date-time
          nullable: true
        questionId:
          type: string
          format: uuid
        question:
          $ref: '#/components/schemas/Question'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          nullable: true
      additionalProperties: false
    ReplyPostModel:
      type: object
      properties:
        questionId:
          type: string
          format: uuid
        authorId:
          type: string
          format: uuid
        content:
          type: string
          nullable: true
      additionalProperties: false
    SingleQuestionDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
        author:
          $ref: '#/components/schemas/AuthorDto'
        rating:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        lastUpdate:
          type: string
          format: date-time
          nullable: true
        content:
          type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
        replies:
          type: array
          items:
            $ref: '#/components/schemas/QuestionReplyDto'
          nullable: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentDto'
          nullable: true
      additionalProperties: false
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
          nullable: true
      additionalProperties: false
    TagDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
          nullable: true
        replies:
          type: array
          items:
            $ref: '#/components/schemas/Reply'
          nullable: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          nullable: true
      additionalProperties: false
    UsersDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        questions:
          type: integer
          format: int32
        replies:
          type: integer
          format: int32
        comments:
          type: integer
          format: int32
      additionalProperties: false
